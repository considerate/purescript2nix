name: "Compile Registry Package Sets"
on:
  schedule:
    - cron: '30 19 * * 4'
  workflow_dispatch:
jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Nix
      uses: nixbuild/nix-quick-install-action@v21
      with:
        nix_conf: experimental-features = nix-command flakes
    - uses: cachix/cachix-action@v12
      with:
        name: purifix
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: |
        export PATH="$PATH:$(nix build '.#jq' --no-link --print-out-paths)/bin"
        export PATH="$PATH:$(nix build '.#nix-eval-jobs' --no-link --print-out-paths)/bin"
        # evaluate all package sets
        nix-eval-jobs --flake .#packages.x86_64-linux.registry-package-sets --gc-roots-dir gcroots --check-cache-status | tee eval.json
        # find uncached derivations
        IFS=$'\n' read -r -d '' -a derivations <<<"$(jq -r "select(.isCached | not) | .drvPath" <eval.json)"
        # build the uncached derivations
        for derivation in "${derivations[@]}"; do
          echo "building derivation:"
          echo "$derivation"
          nix-store --realise "$derivation"
        done
        # print built derivations
        IFS=$'\n' read -r -d '' -a attrs <<<"$(jq -r "select(.isCached) | .attr" <eval.json)"
        for attr in "${attrs[@]}"; do
          echo "skipping $attr because it's already built and cached"
        done
